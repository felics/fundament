
//////////////////////////////
// CORE
//////////////////////////////

// Static Content
// 1. https://github.com/philipwalton/flexbugs#1-minimum-content-sizing-of-flex-items-not-honored
///////////////////////////////

@mixin grid-static {
    @include mixin-dryer("grid") {
        display: flex;
        flex: initial;
        list-style: none;
        padding: 0;
    }
}

@mixin item-static {
    @include mixin-dryer("item") {
        box-sizing: border-box;
        flex-shrink: 0; // * 1
    }
}

@mixin push-pull-static {
    @include mixin-dryer("push-pull") {
        position: relative;
    }
}

// Grid Wrapper
///////////////////////////////

@mixin grid($modifiers...) {
    @include grid-static;
    @include grid-modifiers($modifiers...);
}

// Grid Item
///////////////////////////////

@mixin item($widths...) {
    @include item-static;
    @include grid-calc(width, $widths...);
}

// Push / Pull
///////////////////////////////

@mixin pull($widths...) {
    @include push-pull-static;
    @include grid-calc(right, $widths...);
}

@mixin push($widths...) {
    @include push-pull-static;
    @include grid-calc(left, $widths...);
}

// Stretch
///////////////////////////////

@mixin stretch {
    align-self: stretch;
    display: flex;
    flex-flow: row wrap;

    #{$hagrid-item-selector} {
        flex: 1 1 100%;
    }
}

// Breakpoints
///////////////////////////////

@mixin bp($breakpoints...) {

    @each $breakpoint in $breakpoints {
        $bp: parse-breakpoint($breakpoint);

        @if $bp != false {
            @media only screen and #{$bp} {
                @content;
            }
        }
        @else {
            @warn "You are trying to call @bp with an unknown, unquoted breakpoint: #{$breakpoint}";
        }
    }
}
