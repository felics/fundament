
// * Fundament Modifiers
// * ---------------------
// * These modifiers can be applied to the grid and __#{$fdmt--item}s.
// * To apply a modifier, use --modifier on parent and --modifier__#{$fdmt--item} on child.
// * The separation of --modifier and __#{$fdmt--item}--modifier prevents bullshit selectors in output.
// @contains:
// @  1. --full
// @  2. --rev
// @  3. --center
// @  4. --right
// @  5. --bottom
// @  6. --middle
// @  7. --wide
// @  8. --narrow
// @  9. --space-around (flex-only)
// @ 10. --space-between (flex-only)
// * ---------------------

@if(fdmt(modifiers, use-modifiers) == true) {

    // * --full
    // * Full-width grid without any margins & padding.
    // * ---------------------

    @if(fdmt(modifiers, full) == true) {
        #{$fdmt--class-type}#{$fdmt--namespace}--full {
            margin-left: 0;
        }
        #{$fdmt--class-type}#{$fdmt--namespace}--full__#{$fdmt--item} {
            padding-left: 0;
        }
    }

    // * --rev
    // * Reversed source-order. (!The fallback grid will only not work on 100%-items, flexbox does. !)
    // * ---------------------

    @if(fdmt(modifiers, rev) == true) {
        #{$fdmt--class-type}#{$fdmt--namespace}--rev {
            direction: rtl;
            -webkit-flex-flow: wrap-reverse row;
            -ms-flex-flow: wrap-reverse row;
            flex-flow: wrap-reverse row;
            text-align: left;
        }
        #{$fdmt--class-type}#{$fdmt--namespace}--rev__#{$fdmt--item} {
            direction: ltr;
            text-align: left;
        }
    }

    // * --center
    // * Center the grid if items don't add up to 100%
    // * ---------------------

    @if(fdmt(modifiers, center) == true) {
        #{$fdmt--class-type}#{$fdmt--namespace}--center {
            -webkit-justify-content: center;
            -ms-flex-pack: center;
            justify-content: center;
            text-align: center;

        }
        #{$fdmt--class-type}#{$fdmt--namespace}--center__#{$fdmt--item} {
            text-align: left;
        }
    }

    // * --right
    // * Align the grid to the right if items don't add up to 100%
    // * ---------------------

    @if(fdmt(modifiers, right) == true) {
        #{$fdmt--class-type}#{$fdmt--namespace}--right {
            -webkit-justify-content: flex-end;
            -ms-flex-pack: end;
            justify-content: flex-end;
            text-align: right;
        }
        #{$fdmt--class-type}#{$fdmt--namespace}--right__#{$fdmt--item} {
            text-align: left;
        }
    }

    // * --bottom
    // * Vertically align items of a row to the bottom.
    // * ---------------------

    @if(fdmt(modifiers, bottom) == true) {
        #{$fdmt--class-type}#{$fdmt--namespace}--bottom {
            -webkit-align-items: flex-end;
            -ms-flex-align: end;
            align-items: flex-end;
        }
        #{$fdmt--class-type}#{$fdmt--namespace}--bottom__#{$fdmt--item} {
            vertical-align: bottom;
        }
    }

    // * --middle
    // * Vertically center items of a row.
    // * ---------------------

    @if(fdmt(modifiers, middle) == true) {
        #{$fdmt--class-type}#{$fdmt--namespace}--middle {
            -webkit-align-items: center;
            -ms-flex-align: center;
            align-items: center;
        }
        #{$fdmt--class-type}#{$fdmt--namespace}--middle__#{$fdmt--item} {
            vertical-align: middle;
        }
    }

    // * --top
    // * Align items to top in flexbox(default: stretch)
    // * ---------------------

    @if(fdmt(modifiers, top) == true) {
        #{$fdmt--class-type}#{$fdmt--namespace}--top {
            -webkit-align-items: flex-start;
                -ms-align-items: flex-start;
                    align-items: flex-start;

        }
        #{$fdmt--class-type}#{$fdmt--namespace}--top__#{$fdmt--item} {
            vertical-align: top;
        }
    }

    // * --wide
    // * Wider margins
    // * ---------------------

    @if(fdmt(modifiers, wide) == true) {
        #{$fdmt--class-type}#{$fdmt--namespace}--wide {
            margin-left: -(fdmt(settings,gutter) * 2 );
        }
        #{$fdmt--class-type}#{$fdmt--namespace}--wide__#{$fdmt--item} {
            padding-left: (fdmt(settings,gutter) * 2 );
        }
    }

    // * --narrow
    // * Narrower margins.
    // * ---------------------

    @if(fdmt(modifiers, narrow) == true) {
        #{$fdmt--class-type}#{$fdmt--namespace}--narrow {
            margin-left: -(fdmt(settings,gutter) / 2);
        }
        #{$fdmt--class-type}#{$fdmt--namespace}--narrow__#{$fdmt--item} {
            padding-left: (fdmt(settings,gutter) / 2);
        }
    }

    // * --space-around
    // * Align items by dynamic margins around (flexbox only)
    // * ---------------------

    @if(fdmt(modifiers, space-around) == true) {
        #{$fdmt--class-type}#{$fdmt--namespace}--space-around {
            -webkit-justify-content: space-around;
                -ms-justify-content: space-around;
                    justify-content: space-around;
        }
    }

    // * --space-between
    // * Align items by dynamic margins between them (flexbox only)
    // * ---------------------

    @if(fdmt(modifiers, space-between) == true) {
        #{$fdmt--class-type}#{$fdmt--namespace}--space-between {
            -webkit-justify-content: space-between;
                -ms-justify-content: space-between;
                    justify-content: space-between;
        }
    }

    // * --even
    // * Align items by dynamic margins between them, no widths needed (flexbox only)
    // * ---------------------

    @if(fdmt(modifiers, even) == true) {

        #{$fdmt--class-type}#{$fdmt--namespace}--even__#{$fdmt--item} {
            width: auto;
            -webkit-flex-grow: 1;
                -ms-flex-grow: 1;
                    flex-grow: 1;
        }
    }

}
