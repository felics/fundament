
// * Fundament Modifiers
// * ---------------------
// * These modifiers can be applied to the grid and __#{$fdmt-grid--item}s.
// * To apply a modifier, use --modifier on parent and --modifier__#{$fdmt-grid--item} on child.
// * The separation of --modifier and __#{$fdmt-grid--item}--modifier prevents bullshit selectors in output.
// @contains:
// @  1. --full
// @  2. --rev
// @  3. --center
// @  4. --right
// @  5. --bottom
// @  6. --middle
// @  7. --wide
// @  8. --narrow
// @  9. --space-around (flex-only)
// @ 10. --space-between (flex-only)
// * ---------------------


@if(fdmt-grid(modifiers, use-modifiers) == true) {

    #{$fdmt-grid--class-type}#{$fdmt-grid--namespace} {

        // * --full
        // * Full-width grid without any margins & padding.
        // * ---------------------

        @if(fdmt-grid(modifiers, full) == true) {
            &--full {
                margin-left: 0;
            }
            &-#{$fdmt-grid--item}--full {
                padding-left: 0;
            }
        }

        // * --rev
        // * Reversed source-order. (!The fallback grid will only not work on 100%-items, flexbox does. !)
        // * ---------------------

        @if(fdmt-grid(modifiers, rev) == true) {
            &--rev {
                direction: rtl;
                flex-flow: wrap-reverse row;
                text-align: left;
            }
            &-#{$fdmt-grid--item}--rev {
                direction: ltr;
                text-align: left;
            }
        }

        // * --center
        // * Center the grid if items don't add up to 100%
        // * ---------------------

        @if(fdmt-grid(modifiers, center) == true) {
            &--center {
                justify-content: center;
                text-align: center;
            }
            &-#{$fdmt-grid--item}--center {
                text-align: left;
            }
        }

        // * --right
        // * Align the grid to the right if items don't add up to 100%
        // * ---------------------

        @if(fdmt-grid(modifiers, right) == true) {
            &--right {
                justify-content: flex-end;
                text-align: right;
            }
            &-#{$fdmt-grid--item}--right {
                text-align: left;
            }
        }

        // * --bottom
        // * Vertically align items of a row to the bottom.
        // * ---------------------

        @if(fdmt-grid(modifiers, bottom) == true) {
            &--bottom {
                align-items: flex-end;
            }
            &-#{$fdmt-grid--item}--bottom {
                 vertical-align: bottom;
             }
        }

        // * --middle
        // * Vertically center items of a row.
        // * ---------------------

        @if(fdmt-grid(modifiers, middle) == true) {
            &--middle {
                align-items: center;
            }
            &-#{$fdmt-grid--item}--middle {
                vertical-align: middle;
            }
        }

        // * --top
        // * Align items to top in flexbox(default: stretch)
        // * ---------------------

        @if(fdmt-grid(modifiers, top) == true) {
            &--top {
                align-items: flex-start;
            }
            &-#{$fdmt-grid--item}--top {
                vertical-align: top;
            }
        }

        // * --wide
        // * Wider margins
        // * ---------------------

        @if(fdmt-grid(modifiers, wide) == true) {
            &--wide {
                margin-left: -(fdmt-grid(settings,gutter) * 2 );
            }
            &-#{$fdmt-grid--item}--wide {
                padding-left: (fdmt-grid(settings,gutter) * 2 );
            }
        }

        // * --narrow
        // * Narrower margins.
        // * ---------------------

        @if(fdmt-grid(modifiers, narrow) == true) {
            &--narrow {
                margin-left: -(fdmt-grid(settings,gutter) / 2);
            }
            &-#{$fdmt-grid--item}--narrow {
                padding-left: (fdmt-grid(settings,gutter) / 2);
            }
        }

        // * --space-around
        // * Align items by dynamic margins around (flexbox only)
        // * ---------------------

        @if(fdmt-grid(modifiers, space-around) == true) {
            &--space-around {
                justify-content: space-around;
            }
        }

        // * --space-between
        // * Align items by dynamic margins between them (flexbox only)
        // * ---------------------

        @if(fdmt-grid(modifiers, space-between) == true) {
            &--space-between {
                justify-content: space-between;
            }
        }

        // * --even
        // * Align items by dynamic margins between them, no widths needed (flexbox only)
        // * ---------------------

        @if(fdmt-grid(modifiers, even) == true) {
            &-#{$fdmt-grid--item}--even {
                width: auto;
                flex: 1 1 auto;
            }
        }
    }
}
