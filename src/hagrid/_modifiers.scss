
//////////////////////////////
// Modifiers
///////////////////////////////

@mixin grid-modifiers($modifiers...) {

    $is-y: false;
    $is-wrap: false;
    $is-spacing: false;

    @each $modifier in $modifiers {
        // * Check for modifiers that collide with defaults
        @if $modifier == bottom or $modifier == top or $modifier == middle {
            $is-y: true;
        }
        @else if $modifier == flip {
            $is-wrap: true;
        }
        @else if $modifier == narrow or $modifier == wide or $modifier == full {
            $is-spacing: true;
        }

        @include grid-modifier($modifier);

    }

    @if $is-y == false {
        align-items: flex-start;
    }

    @if $is-wrap == false {
        flex-wrap: wrap;
    }

    @if $is-spacing == false {
        margin: {
            left: (-$hagrid-gutter/2);
            right: (-$hagrid-gutter/2);
        };
    }
}

@mixin grid-modifier($modifier) {

    // x-Axis Alignment
    //////////////////////////////

    @if $modifier == right {
        justify-content: flex-end;

        @if $hagrid-fallback {
            text-align: right;
            > * {
                text-align: left;
            }
        }
    }
    @else if $modifier == center {
        justify-content: center;

        @if $hagrid-fallback {
            text-align: center;
            > * {
                text-align: left;
            }
        }
    }

    // * y-Axis Alignment
    // * We have to use !important on some properties in order to keep the nice syntax
    //////////////////////////////

    @else if $modifier == bottom {
        align-items: flex-end;

        @if $hagrid-fallback {
            > * {
                vertical-align: bottom!important;
            }
        }

    }
    @else if $modifier == middle {
        align-items: center;

        @if $hagrid-fallback {
            > * {
                vertical-align: middle!important;
            }
        }

    }

    // Flex Alignment
    ///////////////////////////////

    @else if $modifier == space-around {
        justify-content: space-around;

        @if $hagrid-fallback and $hagrid-fallback-warnings {
            @warn "Modifier #{$modifier} won't work on fallback-grid!"
        }
    }
    @else if $modifier == space-between {
        justify-content: space-between;

        @if $hagrid-fallback and $hagrid-fallback-warnings {
            @warn "Modifier #{$modifier} won't work on fallback-grid!"
        }
    }

    // Spacing
    //////////////////////////////

    @else if $modifier == full {
        margin: {
            left: 0;
            right: 0;
        };

        > * {
            padding: {
                left: 0!important;
                right: 0!important;
            };
        }
    }
    @else if $modifier == wide {
        margin: {
            left: (-$hagrid-gutter);
            right: (-$hagrid-gutter);
        };

        > * {
            padding: {
                left: $hagrid-gutter!important;
                right: $hagrid-gutter!important;
            };
        }
    }
    @else if $modifier == narrow {
        margin: {
            left: (-$hagrid-gutter/4);
            right: (-$hagrid-gutter/4);
        };

        > * {
            padding: {
                left: ($hagrid-gutter/4)!important;
                right: ($hagrid-gutter/4)!important;
            };
        }
    }

    // Flex Spacing
    ///////////////////////////////

    @else if $modifier == auto {
        > * {
            flex: 1 1 auto;
        }

        @if $hagrid-fallback and $hagrid-fallback-warnings {
            @warn "Modifier #{$modifier} won't work on fallback-grid!"
        }
    }

    // Direction
    ///////////////////////////////

    @else if $modifier == rev {

        @if $hagrid-fallback {
            direction: rtl;
            > * {
                direction: ltr;
                text-align: left;
            }
        } @else {
            flex-direction: row-reverse;
        }

    }

    @else if $modifier == flip {
        flex-wrap: wrap-reverse;
        // * Workaround for IE rendering diff, see: https://github.com/felics/hagrid/issues/13
        @media screen and (-ms-high-contrast: active), (-ms-high-contrast: none) {
            align-items: flex-end;
        }

        @if $hagrid-fallback and $hagrid-fallback-warnings {
            @warn "Modifier #{$modifier} won't work on fallback-grid!"
        }
    }
    @else {
        @error "Modifier #{ $modifier } does not exist."
    }
}
