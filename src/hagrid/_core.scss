
///////////////////////////////
// Core
///////////////////////////////

// Static Content
// 1. https://github.com/philipwalton/flexbugs#1-minimum-content-sizing-of-flex-items-not-honored
///////////////////////////////

@mixin grid-static {
    @include mixin-dryer("grid") {
        display: flex;
        flex: initial;
        flex-flow: row wrap;
        align-items: flex-start;
        list-style: none;
        margin-left: (-$hagrid-gutter/2);
        margin-right: (-$hagrid-gutter/2);
        padding: 0;

        @if ($hagrid-fallback) {
            letter-spacing: -0.31em;
            font-family: FreeSans, Arimo, "Droid Sans", Helvetica, Arial, sans-serif;
            text-rendering: optimizespeed;
        }
    }
}


@mixin item-static {
    @include mixin-dryer("item") {
        flex-shrink: 0; // * 1
        box-sizing: border-box;
        padding-left: ($hagrid-gutter/2);
        padding-right: ($hagrid-gutter/2);

        @if ($hagrid-fallback) {
            display: inline-block;
            font-family: $hagrid-font;
            zoom: 1;
            letter-spacing: normal;
            vertical-align: top;
            text-rendering: auto;
        }

    }
}

@mixin push-pull-static {
    @include mixin-dryer("push-pull"){
        position: relative;
    }
}

// Grid Wrapper
///////////////////////////////

@mixin grid($modifiers...) {

    @include grid-static();

    @include grid-modifiers($modifiers...);
}

// Grid Item
///////////////////////////////

@mixin item($widths...) {

    @include item-static();

    @include grid-calc(width, $widths...);
}


// Push / Pull
///////////////////////////////

@mixin pull($widths...) {

    @include push-pull-static();

    @include grid-calc(right, $widths...);


}

@mixin push($widths...) {

    @include push-pull-static();

    @include grid-calc(left, $widths...);

}

// Stretch
///////////////////////////////

@mixin stretch {
    align-self: stretch;
    display: flex;
    flex-flow: row wrap;
    > * {
        flex: 1 1 100%;
    }
    @if $hagrid-fallback and $hagrid-show-warnings {
        @warn "Stretch won't work on fallback-grid!"
    }
}

// Breakpoints
///////////////////////////////

@mixin bp($breakpoint) {
    @if map-has-key($hagrid-breakpoints, $breakpoint) {
        @media only screen and #{map-get($hagrid-breakpoints, $breakpoint)} {
            @content;
        }
    }
}
